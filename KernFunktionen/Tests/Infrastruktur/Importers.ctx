--- RCPTT testcase ---
Format-Version: 1.0
Context-Type: org.eclipse.rcptt.ctx.ecl
Element-Name: Importers
Element-Type: context
Element-Version: 2.0
Id: _7pLWIBQVEemEb8FG0wciYA
Runtime-Version: 2.6.0.202505301009
Save-Time: 5/31/25, 2:48 PM

------=_.ecl.context-718f04b4-ed39-33e3-af62-0995e4561998
Content-Type: text/ecl
Entry-Name: .ecl.context

// When running Jenkis-CI we often had the problem that
// Clicking Leistungen öffnen did not work
// Therefore we open the Codes/Codes view

proc "OpenLeistungen" {
	// this makes problem get-button [ t btn_services ] | click
	open-window-by-name [ t codes ]
	with [get-view [ t codes ]] {
		 get-tab-folder | key-type "M1+m"
	}
}

proc "AddEigenleistung" [ val short_name "m" ] [ val name "MeineBesteLeistung" ]
 [ val invoice_cents 50000 ] [ val cost_cents 10000 ] [ val needTime 7 ] {
	OpenLeistungen
	with [get-view [ t codes ]] {
		get-tab-folder | get-tab-item Eigenleistung | click
		get-editbox -after [get-label Code ] | set-focus
	    get-button [ t add_eigenleistung ] | click -metaKeys ""
	}
	with [get-window [ t eingeleistung_dialog]] {
	    with [get-editbox -after [get-label [t eigenleistung_code]]] {
	        set-text $short_name
        }
	    with [get-editbox -after [get-label [t eigenleistung_name]]] {
	        set-text $name
		}
	    with [get-editbox -after [get-label [t eigenleistung_cost]]] {
	        set-text $invoice_cents
	    }
	    with [get-editbox -after [get-label [t eigenleistung_price]]] {
	        set-text $cost_cents
	    }
	    get-editbox -after [get-label [t eigenleistung_time]] | set-text 5
		get-button [ t ok ] | click -metaKeys ""
    }
}

proc "ImportEigenDiagnosen"  [ val file  [ concat $rcpttDir "/Eigendiagnosen.csv"] ] {
	get-eclipse-window | gen-screenshot [concat $imagesDir "ReadEigendiagnosen_0.png"]
	OpenLeistungen
	concat "ReadEigendiagnosen file is: " $file | log
	get-eclipse-window | gen-screenshot [concat $imagesDir "ReadEigendiagnosen_1.png"]
	with [get-view [ t codes ]] {
		get-tab-folder | get-tab-item [ t diag_eigendiagnosen ] | click
		get-editbox | set-focus
	}
	get-button [ t show_menu ] | click
	get-view [ t codes ] | get-menu -path [ t btn_import ] | click
	set-dialog-result File $file
	ExecuteDataImport $file
	get-eclipse-window | gen-screenshot [concat $imagesDir "ReadEigendiagnosen.png"]
}

proc "VerifyEigendiagnose" [ val name  "Tauglichkeitsuntersuchung Führerschein" ] {
	OpenLeistungen
	get-view [ t codes] | close
	OpenLeistungen
	with [ get-view [ t codes]] {
		maximize
		get-tab-folder | get-tab-item [ t diag_eigendiagnosen ] | click
		get-editbox | set-focus
		get-tree | select [concat ".*" $name ]
		get-eclipse-window | gen-screenshot [concat $imagesDir "Eigendiagnose_" $name ".png"]
		concat "VerifyEigendiagnose: " $name " was successful" | log
		restore
	}
}

proc "WaitImportFinished" [ val importerName "ZZZ" ] [ val maxWait 90 ] {
	loop [val i 0] {
		try {
			with [get-button [ t show_background_operation] ] {
			/// get-button "Affiche les opérations en arrière-plan dans la vue Progression" | click -metaKeys ""
				// concat "ReadTarmed: Must wait another 10 seconds for window lang " [ safe-get-java-property "user.language"  ] " window: " [ t Import_erfolgreich ] " erfolgreich i is "  $i  " max " $maxWait | log
			    concat "WaitImportFinished: " $importerName [ get-property tooltip -raw ] " " $i " of " $maxWait | log
				wait 10000 // Wait 10 seconds, but at most 5 minutes
				if [ $i | lt $maxWait ] { recur [$i | plus 1]
				} -else {
					concat "WaitImportFinished " $importerName " waited too long i is " $i " max is " $maxWait | log
					bool false | assert-true -message [ concat "ReadTarmed waited too long i is " $i ]
				}
			}
		} -error [val errorObj] -catch {
			concat "WaitImportFinished: " $importerName " Wait for Import erfolgreich done lang: " [ safe-get-java-property "user.language"  ] " window: " [ t Import_erfolgreich ] " erfolgreich i is "  $i |  log
			concat "WaitImportFinished: " $importerName " errorObj " [$errorObj | get message] | log
		}
	}
}

// We try to increase here some timeout to let artikelstamm and tarmed importer complete successfully
//	set-q7-option uijobHangTimeout	   30000
//	set-q7-option jobSleepingStepTimeout 120000
// https://www.eclipse.org/forums/index.php/m/1734168/?srch=wait+progress+view#msg_1734168
// with 1000 and 2000 the OK danach arrived after 2 seconds
// 21:32:16.991 [Worker-28] INFO  PLATFORM - [org.eclipse.core.runtime] ReadArtikelstamm OK before q7
// 21:32:18.135 [Worker-22] INFO  PLATFORM - [org.eclipse.core.runtime] ReadArtikelstamm OK danach

// Achtung: Nur für demoDB gedacht und dort läuft es auch nicht wie geplant,
// da die Anpassungen beim Import immer noch auf dem alten Wert steht
proc "SetArtikelstammOrigin2oddb2ml" {
	if [ get-file $sqlCmdFile | get exists ] {
		delete-file $sqlCmdFile
		concat "deleted: " $sqlCmdFile | log
	}
	str "UPDATE ARTIKELSTAMM_CH set  ADDDSCR= 'oddb2ml' where ID like 'VERSION' and ADDDSCR = 'medindex'; ---" | write-lines $sqlCmdFile
	try {
		exec-process "java" "-classpath" $h2Jar "org.h2.tools.RunScript" "-url" $jdbcConnection "-user" "sa" "-script" $sqlCmdFile
	} -catch {
		log "Some error while deleting ARTIKELSTAMM_CH"
	}
	concat "DeleteAllArtikelstammItems done via: " $sqlCmdFile | log
}

proc "ExecuteDataImport" [ val file ] {
	let [ val fileStatus [ concat "file "  $file " exists? " [get-file $file| get exists] ] ] {
		concat "ExecuteDataImport: " $fileStatus | log
		get-file $file| get exists | bool | assert-true -message  $fileStatus 
	}
	with [get-window [ t view_data_import ]] {
		get-button [ t btn_data_import_search ] | click
		get-button OK | click
	}
	concat "ExecuteDataImport with "  $file " done" | log
	no_OOM_error
}
proc "ReadArtikelstamm" [ val file [ concat $rcpttDir "/Artikelstamm_Short_v5.xml" ] ] [ val maxWaitFor 100 ] {
	open-window-by-name [ t daten_artikel ]
	HandleMissingInvoiceSystems
	with [get-view [ t artikel ]] {
		HandleMissingInvoiceSystems
		with [ get-tab-folder | get-tab-item Artikelstamm ] {
			HandleMissingInvoiceSystems
			try {
				click
				concat "ReadArtikelstamm_5b clicked button " [ t update_invoice_systems ] | log
			} -error [val errorObj] -catch {
					// Seen when running ImportSwissbase with french Elexis
					log "ReadArtikelstamm_5b: handling error "
					click
			}
		}
		get-editbox -after [get-label [ t artikelstamm_label  ]] | set-focus
	}
	get-button [ t show_menu ] | click
	try {
		get-view [ t artikel ] | get-menu -path [ t btn_import ] | click
		set-dialog-result File $file
		concat "ReadArtikelstamm OpenSource OK before " $file | log
		with [get-window [ t view_data_import ]] {
			get-eclipse-window | gen-screenshot [concat $imagesDir "ReadArtikelstamm_before_start.png"]
			get-button [ t btn_data_import_search ] | click
			// TODO: Wait that pull request 174 for Tickets 14745 gets merged
			// get-button "Pharma-Artikel" | check
			get-eclipse-window | gen-screenshot [concat $imagesDir "artikelstamm_OS_imported.png"]
			get-button OK | click
		}
		concat "ReadArtikelstamm OpenSource from " $file | log
	} -catch {
		log "Could not click on import, checking Medelexis Datei..Referenzdaten aktualisieren"
		get-menu -path "Datei/Referenzdaten aktualisieren" | click -metaKeys ""
		try {
			with [get-window "Auswahl erforderlich"] {
			    get-button "Alles auswählen" | click -metaKeys ""
				log "ReadArtikelstamm Referenzdaten must be imported"
				get-eclipse-window | gen-screenshot [concat $imagesDir "refdata2import.png"]
			    get-button OK | click -metaKeys ""
			}
		} -catch {
			log "ReadArtikelstamm Referenzdaten scheinen uptodate zu sein"
			get-eclipse-window | gen-screenshot [concat $imagesDir "refdata_okay.png"]
			get-window "Referenzdaten Update Service" | get-button OK | click -metaKeys ""
		}
	}
	WaitImportFinished "Artikelstamm" -maxWait $maxWaitFor
	get-eclipse-window | gen-screenshot [concat $imagesDir "ArtikelstammImporter_1.png"]
	get-view [ t artikel ] | get-button [ t btn_automatic_search ] | uncheck
	get-eclipse-window | gen-screenshot [concat $imagesDir "ArtikelstammImporter_2.png"]
	concat "ReadArtikelstamm done: " $file |log
}

proc "ReadBlocksExchange" [ val file  [ concat $rcpttDir "/blocks_landarztpraxis_sevelen.xchange"] ] {
	get-eclipse-window | gen-screenshot [concat $imagesDir "ReadBlocksExchange_0.png"]
	OpenLeistungen
	concat "ReadBlocksExchange file is: " $file | log
	get-eclipse-window | gen-screenshot [concat $imagesDir "ReadBlocksExchange_1.png"]
	with [get-view [ t codes ]] {
		get-tab-folder | get-tab-item [ t blocks ] | click
		get-editbox -after [get-label [ t Name ] ] | set-focus
	}
	get-button [ t show_menu ] | click
	get-view [ t codes ] | get-menu -path [ t btn_import ] | click
	set-dialog-result File $file
	ExecuteDataImport $file
	get-eclipse-window | gen-screenshot [concat $imagesDir "ReadBlocksExchange.png"]
}

proc "AssertNoErrorInProgress" {
	open-window-by-name "General/Progress View"
	get-tab-folder | key-type "M1+m"
	with [get-view "Progress View"] {
		global [val errorInImport "false"] -override
		try {
			get-link "Fehler beim Import.*"
			global [val errorInImport "true"] -override
	} -error [ val errorObj ] -catch {
			concat  " While checking for Fehler: error " [$errorObj | get message] | log
	}
	if [ $errorInImport | matches "true" ] {
			$errorInImport | verify-false
		}
	}
}

proc "ReadAnalysenListe" [ val file [ concat $rcpttDir "/EAL_01.04.2020.xlsx" ] ] {
	OpenLeistungen
	get-eclipse-window | gen-screenshot [concat $imagesDir "ReadEAL_1.png"]
	get-view [ t codes ] | get-tab-folder | get-tab-item "EAL 2009" | click
	concat "ReadAnalysenListe file is: " $file | log
	get-button [ t show_menu ] | click
	get-view [ t codes ] | get-menu -path [ t btn_import ] | click
	set-dialog-result File $file
	ExecuteDataImport $file
	// TODO: Warum kommt der Fehler beim Import for Input String "1'000"
	// AssertNoErrorInProgress
}

proc "CheckAnalysenListe" [ val filter "1006" ] {
	OpenLeistungen
    with [get-view [ t codes ] ] {
		get-tab-folder | get-tab-item "EAL 2009" | click
		maximize
		get-editbox | set-text $filter
		get-table | select [ concat $filter ".*"]
		get-eclipse-window | gen-screenshot [concat $imagesDir "EAL_" $filter ".png"]
		restore
	}
}

proc "ReadMigel" [ val file [ concat $rcpttDir "/migel_" $defaultLanguage ".csv" ] ] {
	concat "ReadMigel started for: " $file | log
	try {
		open-window-by-name [ t daten_artikel ]
		get-eclipse-window | gen-screenshot [concat $imagesDir "ReadMigel_1.png"]
	} -error [val errorObj] -catch {
			// Seen when running ImportSwissbase with french Elexis
			concat "Errror " [$errorObj | get message] "in ReadMigel" | log
			set-dialog-result File "/dummy_migel"
	}
	get-view [ t artikel ] | get-tab-folder | get-tab-item MiGeL | click
	get-view [ t artikel ] | get-menu -path [ t btn_import ] | click
	set-dialog-result File $file
	get-window [ t view_data_import ] | get-button [ t delete_all_data ] | check
	ExecuteDataImport $file
	get-eclipse-window | gen-screenshot [concat $imagesDir "ReadMigel.png"]
}

proc "CheckMigelItem" [ val itemName "Absaug" ] {
	open-window-by-name [ t daten_artikel ]
	with [ get-view [ t artikel ] ] {
		get-tab-folder | get-tab-item MiGeL | click
	    get-editbox -index 1 | set-text $itemName
	    get-editbox -index 1 | set-focus
	    get-view  [ t artikel ]  | get-table | select [ concat ".* " $itemName ".*"]
    	get-eclipse-window | gen-screenshot [concat $imagesDir "Migel_" $itemName ".png"]
	}
}
proc "ReadTarmed" [ val file  [ concat $rcpttDir "/TARMED__Datenbank_01.09.00_BR_KVG-27.12.2017.mdb" ] ] {
	WaitImportFinished "Before Tarmed" // Just in case there is still another import running
	OpenLeistungen
	get-eclipse-window | gen-screenshot [concat $imagesDir "ReadTarmed_1.png"]
	with [get-view [ t codes ]] {
		get-tab-folder | get-tab-item Tarmed | click
		get-editbox -after [get-label Ziffer] | set-focus
	}
	get-eclipse-window | gen-screenshot [concat $imagesDir "ReadTarmed_2.png"]
	get-button [ t show_menu ] | click
	get-view [ t codes ] | get-menu -path [ t btn_import ] | click
	set-dialog-result File $file
	with [get-window [ t view_data_import ]] {
		get-button [ t btn_data_import_search ] | click
		get-window [ t view_data_import ] | get-editbox -after [get-label [ t view_data_select_file ] ]
		| set-text  [ replaceAll -replaceString  "" -searchPattern  "file:/" -inString $file ]
		with [get-combo -after [get-label [ t relevant_tarmed_caselaw ] ] ] {
			set-text KVG
			select KVG
		}
		concat "ReadTarmed: Starting with file: " $file | log
		get-eclipse-window | gen-screenshot [concat $imagesDir "Tarmed_Ready_to_import.png"]
		get-button OK | click
		concat "ReadTarmed: Done with file: " $file | log
	}
	concat "ReadTarmed: Start wait for Import erfolgreich" | log
	WaitImportFinished "Tarmed"
}

proc "CheckTarmedPosition" [ val position  "00 .*/00.01 .*/00.01.01 .*" ] [ val shortName "01.01.01" ] {
	open-window-by-name [ t codes ]
	get-view [ t codes ] | close
	try {
		open-window-by-name [ t codes ]
		with [get-view [ t codes ]] {
			restore
			t btn_show_list  | log
		    get-button [ t btn_show_list ] | click	    
		    get-tab-folder | get-tab-item Tarmed | click
		    key-type "M1+m"
		    with [get-editbox -after [get-label Ziffer]] {
		        set-focus
		    }
		    get-eclipse-window | gen-screenshot [concat $imagesDir "Tarmed-select.png"]
		    // next line is okay
		    get-view [ t codes ] | get-tree | select $position
		    get-eclipse-window | gen-screenshot [concat $imagesDir "Tarmed-select-" $shortName ".png"]
		}
		concat "select-tarmed-leistung " $shortName " passed in CheckTarmedPosition" | log
	} -error [val errorObj] -catch {
		global [val tarmed_error [ concat "select-tarmed-leistung " $shortName " failed in CheckTarmedPosition. " [$errorObj | get message] ] ]
		log $tarmed_error
	    get-eclipse-window | gen-screenshot [concat $imagesDir "Tarmed-select-" $shortName ".-failed.png"]
		bool false | assert-true -message $tarmed_error	    
	}	
}

proc "ReadDataImport" [ val file [ concat $rcpttDir "/Universal_patienten.xls" ] ] [ val fType XLS ]
	[ val tab [ t Kontakt_Importer ] ] {
	concat "ReadDataImport tab " $tab " from " $file " exists? " [ get-file $file | get exists ] | log
	get-file $file| get exists | verify-true
	get-menu -path [ t menu_data_import ] | click
	get-window [ t view_general_data_import ] | get-tab-folder | get-tab-item $tab | click
	set-dialog-result File $file
	with [get-window [ t view_general_data_import  ] ] {
	    get-combo | select $fType
		get-button [ t btn_dataimport_select_file ] | click
  		get-eclipse-window | gen-screenshot  [concat $imagesDir "ReadDataImport.png"]
		get-button [ t ok ] | click
	}
}

proc "ReadComplimentary" [ val file ] {
	OpenLeistungen
	with [get-view [ t codes ]] {
	    get-tab-folder | get-tab-item [ t Komplementaermedizin ] | click
		get-eclipse-window | gen-screenshot [concat $imagesDir "ReadComplimentary_starting.png"]
	}
	// get-button "Menü anzeigen" -index 2 | click
	get-view [ t codes ] | get-menu -path [ t btn_import ] | click
	set-dialog-result File [ concat $rcpttDir "/complementary_24022020.csv" ]
	get-window [ t view_data_import ] | get-button [ t btn_data_import_search ] | click
	get-window [ t view_data_import ] | get-button OK | click
	get-view [ t codes ] | get-button [ t btn_execute_search ] | click
	get-eclipse-window | gen-screenshot [concat $imagesDir "ReadComplimentary_done.png"]
}

proc "CheckArtikelstammLosartan" {
//	get-button [ t button_open_articles ] | click
	open-window-by-name [ t leistungen ]
	get-eclipse-window | key-type "M1+m" // Maximize
	SelectArtikelitemInTab
}

proc "CheckArtikelstammNolvadex" {
//	get-button [ t button_open_articles ]
	open-window-by-name [ t leistungen ]
	get-eclipse-window | key-type "M1+m" // Maximize
	SelectArtikelitemInTab Nolvadex "Nolvadex.*Stk.*"
	get-view [t leistungen ] | restore
}

// Ende
//
------=_.ecl.context-718f04b4-ed39-33e3-af62-0995e4561998--
